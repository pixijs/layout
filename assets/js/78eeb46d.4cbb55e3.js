"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7292],{3023:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>d});var s=i(3696);const t={},r=s.createContext(t);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(r.Provider,{value:n},e.children)}},7787:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"guides/core/components","title":"Components","description":"Built-in Components","source":"@site/docs/guides/core/components.md","sourceDirName":"guides/core","slug":"/guides/core/components","permalink":"/docs/guides/core/components","draft":false,"unlisted":false,"editUrl":"https://github.com/pixijs/layout/tree/main/website/docs/docs/guides/core/components.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"Components","hide_title":true,"sidebar_position":3},"sidebar":"guides","previous":{"title":"LayoutSystem API","permalink":"/docs/guides/core/layout-system"},"next":{"title":"Sizing and Dimensions","permalink":"/docs/guides/styles/sizing-and-dimensions"}}');var t=i(2540),r=i(3023);const o={title:"Components",hide_title:!0,sidebar_position:3},d=void 0,l={},c=[{value:"Built-in Components",id:"built-in-components",level:2},{value:"LayoutContainer API",id:"layoutcontainer-api",level:2},{value:"Example",id:"example",level:3},{value:"LayoutContainerOptions",id:"layoutcontaineroptions",level:3},{value:"LayoutView API",id:"layoutview-api",level:2},{value:"Example",id:"example-1",level:3},{value:"LayoutViewOptions",id:"layoutviewoptions",level:3},{value:"Custom Backgrounds",id:"custom-backgrounds",level:2},{value:"Trackpad Customization",id:"trackpad-customization",level:2}];function a(e){const n={code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"built-in-components",children:"Built-in Components"}),"\n",(0,t.jsx)(n.p,{children:"The PixiJS Layout library includes ready-to-use components that combine PixiJS nodes with additional layout features.\nAll built-in components support:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"backgroundColor"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"borderColor"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"borderRadius"})}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"overflow"})," control (including scroll)"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"These components allow for a more CSS-like styling experience, enabling you to create more complex layouts with ease."}),"\n",(0,t.jsx)(n.p,{children:"There are three categories of components:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"LayoutContainer"}),": A flex container that can manage multiple children."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"LayoutView-based components"}),": Single-child wrappers that apply layout to internal content."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Re-exported PixiJS components"}),": These are standard PixiJS objects that have been re-exported to ensure layout is applied correctly in the constructor."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"layoutcontainer-api",children:"LayoutContainer API"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"LayoutContainer"})," is a full flex container supporting:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Multiple children"}),": It manages its children according to flexbox rules such as ",(0,t.jsx)(n.code,{children:"justifyContent"}),", ",(0,t.jsx)(n.code,{children:"alignItems"}),", and ",(0,t.jsx)(n.code,{children:"gap"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Overflow"}),": Supports ",(0,t.jsx)(n.code,{children:"hidden"}),", ",(0,t.jsx)(n.code,{children:"scroll"}),", and ",(0,t.jsx)(n.code,{children:"visible"})," overflow settings.","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Wheel & Touch support"}),": Smooth, physics-based scrolling is integrated through a Trackpad instance for ",(0,t.jsx)(n.code,{children:"overflow: 'scroll'"}),"."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Background and border rendering"}),": It can draw solid backgrounds, borders, and rounded corners based on style properties."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Custom background"}),": You can provide your own background object instead of the default ",(0,t.jsx)(n.code,{children:"Graphics"})," object. See the ",(0,t.jsx)(n.strong,{children:"Custom Backgrounds"})," section below for more details."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"import { LayoutContainer } from '@pixi/layout/components';\n\nconst container = new LayoutContainer({\n    layout: {\n        width: 300,\n        height: 300,\n        overflow: 'scroll',\n        padding: 10,\n        gap: 10,\n        backgroundColor: 0x202020,\n        borderColor: 0xffffff,\n        borderRadius: 12,\n    },\n});\n\n// Add multiple children freely\ncontainer.addChild(child1, child2, child3);\n"})}),"\n",(0,t.jsx)(n.h3,{id:"layoutcontaineroptions",children:"LayoutContainerOptions"}),"\n",(0,t.jsxs)(n.p,{children:["When creating a ",(0,t.jsx)(n.code,{children:"LayoutContainer"}),", you can pass ",(0,t.jsx)(n.code,{children:"LayoutContainerOptions"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"interface LayoutContainerOptions extends ContainerOptions {\n    layout?: LayoutStyles;\n    trackpad?: TrackpadOptions;\n    background?: ContainerChild;\n}\n"})}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Field"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"layout"})}),(0,t.jsx)(n.td,{children:"Layout styles to apply on creation (e.g., width, flex settings, padding)."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"trackpad"})}),(0,t.jsxs)(n.td,{children:["Settings for scroll behavior (only relevant if ",(0,t.jsx)(n.code,{children:"overflow: 'scroll'"}),")."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"background"})}),(0,t.jsx)(n.td,{children:"A custom PixiJS object to use as background instead of the default."})]})]})]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"layoutview-api",children:"LayoutView API"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"LayoutView"})," is a lightweight single-child layout wrapper. It manages one object called the ",(0,t.jsx)(n.code,{children:"slot"}),", which it applies layout rules to."]}),"\n",(0,t.jsxs)(n.p,{children:["Several all PixiJS display objects have been wrapped in a ",(0,t.jsx)(n.code,{children:"LayoutView"})," and exported. They automatically create and manage their internal slot:"]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Component"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"LayoutSprite"})}),(0,t.jsxs)(n.td,{children:["A layout-aware ",(0,t.jsx)(n.code,{children:"Sprite"})]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"LayoutNineSliceSprite"})}),(0,t.jsxs)(n.td,{children:["A layout-aware ",(0,t.jsx)(n.code,{children:"NineSliceSprite"})]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"LayoutTilingSprite"})}),(0,t.jsxs)(n.td,{children:["A layout-aware ",(0,t.jsx)(n.code,{children:"TilingSprite"})]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"LayoutAnimatedSprite"})}),(0,t.jsxs)(n.td,{children:["A layout-aware ",(0,t.jsx)(n.code,{children:"AnimatedSprite"})]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"LayoutGifSprite"})}),(0,t.jsxs)(n.td,{children:["A layout-aware ",(0,t.jsx)(n.code,{children:"GifSprite"})]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"LayoutGraphics"})}),(0,t.jsxs)(n.td,{children:["A layout-aware ",(0,t.jsx)(n.code,{children:"Graphics"})]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"LayoutText"})}),(0,t.jsxs)(n.td,{children:["A layout-aware ",(0,t.jsx)(n.code,{children:"Text"})]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"LayoutBitmapText"})}),(0,t.jsxs)(n.td,{children:["A layout-aware ",(0,t.jsx)(n.code,{children:"BitmapText"})]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"LayoutHTMLText"})}),(0,t.jsxs)(n.td,{children:["A layout-aware ",(0,t.jsx)(n.code,{children:"HTMLText"})]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"LayoutMesh"}),","]}),(0,t.jsx)(n.td,{children:"Mesh-based variations"})]})]})]}),"\n",(0,t.jsx)(n.p,{children:"Each of these behaves like its native PixiJS object, but with built-in layout sizing, positioning, and styling."}),"\n",(0,t.jsx)(n.h3,{id:"example-1",children:"Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"import { LayoutSprite, LayoutView } from '@pixi/layout/components';\nimport { Assets, Sprite } from 'pixi.js';\n\nconst texture = await Assets.load('https://pixijs.com/assets/bunny.png');\n\nconst bunny = new LayoutSprite({\n    texture,\n    layout: {\n        width: 100,\n        height: 100,\n        objectFit: 'contain',\n        backgroundColor: 0x444444,\n        borderColor: 0xffffff,\n        borderRadius: 8,\n    },\n});\n\n// Or use the LayoutView directly\nconst bunny2 = new LayoutView({\n    slot: new Sprite(texture),\n    layout: {\n        width: 100,\n        height: 100,\n        objectFit: 'contain',\n        backgroundColor: 0x444444,\n        borderColor: 0xffffff,\n        borderRadius: 8,\n    },\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"layoutviewoptions",children:"LayoutViewOptions"}),"\n",(0,t.jsxs)(n.p,{children:["When creating a ",(0,t.jsx)(n.code,{children:"LayoutView"})," or one of the PixiJS Layout objects, you can pass ",(0,t.jsx)(n.code,{children:"LayoutViewOptions"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"interface LayoutViewOptions<T extends Container = Container> extends LayoutContainerOptions {\n    slot?: T;\n}\n"})}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Field"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"layout"})}),(0,t.jsx)(n.td,{children:"Layout styles to apply."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"trackpad"})}),(0,t.jsx)(n.td,{children:"Scroll settings."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"background"})}),(0,t.jsx)(n.td,{children:"A custom background object."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"slot"})}),(0,t.jsx)(n.td,{children:"The internal display object that will be managed by the view."})]})]})]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"custom-backgrounds",children:"Custom Backgrounds"}),"\n",(0,t.jsxs)(n.p,{children:["By default, ",(0,t.jsx)(n.code,{children:"LayoutContainer"})," and ",(0,t.jsx)(n.code,{children:"LayoutView"})," create an internal ",(0,t.jsx)(n.code,{children:"Graphics"})," object to draw the background color, border, and rounded corners."]}),"\n",(0,t.jsxs)(n.p,{children:["You can override this behavior by providing your own ",(0,t.jsx)(n.code,{children:"background"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"import { LayoutContainer } from '@pixi/layout/components';\nimport { Sprite, Assets } from 'pixi.js';\n\nconst texture = await Assets.load('https://pixijs.com/assets/bunny.png');\n\nconst container = new LayoutContainer({\n    layout: { width: 300, height: 300 },\n    background: new Sprite({ texture }),\n});\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Important:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["When a custom background is provided, automatic ",(0,t.jsx)(n.code,{children:"backgroundColor"}),", ",(0,t.jsx)(n.code,{children:"borderColor"}),", and ",(0,t.jsx)(n.code,{children:"borderRadius"})," styling is disabled."]}),"\n",(0,t.jsx)(n.li,{children:"The custom background will only be positioned and sized according to the layout rules."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The custom background is placed at the bottom of the display list behind the main content."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"trackpad-customization",children:"Trackpad Customization"}),"\n",(0,t.jsxs)(n.p,{children:["When ",(0,t.jsx)(n.code,{children:"overflow: 'scroll'"})," is enabled, a ",(0,t.jsx)(n.strong,{children:"trackpad controller"})," is created automatically for smooth, physics-based scrolling."]}),"\n",(0,t.jsx)(n.p,{children:"Trackpad options you can configure include:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Option"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Default"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"maxSpeed"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"number"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"400"})}),(0,t.jsx)(n.td,{children:"Maximum scrolling velocity in pixels per frame"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"constrain"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"boolean"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"true"})}),(0,t.jsx)(n.td,{children:"Whether to constrain scrolling within content bounds"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"disableEasing"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"boolean"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"false"})}),(0,t.jsx)(n.td,{children:"Disable momentum scrolling/easing when releasing"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"xEase"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"ConstrainEase"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"ScrollSpring"})}),(0,t.jsx)(n.td,{children:"Custom easing for x-axis scrolling"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"yEase"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"ConstrainEase"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"ScrollSpring"})}),(0,t.jsx)(n.td,{children:"Custom easing for y-axis scrolling"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"xConstrainPercent"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"number"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"0"})}),(0,t.jsx)(n.td,{children:"Percentage of overflow allowed when dragging beyond x-axis limit. Setting this value to a negative number disables x-axis scrolling entirely."})]})]})]}),"\n",(0,t.jsxs)(n.p,{children:["| ",(0,t.jsx)(n.code,{children:"yConstrainPercent"})," | ",(0,t.jsx)(n.code,{children:"number"}),"        | ",(0,t.jsx)(n.code,{children:"0"}),"            | Percentage of overflow allowed when dragging beyond y-axis limit. Setting this value to a negative number disables y-axis scrolling entirely. |"]}),"\n",(0,t.jsxs)(n.p,{children:["These options are passed when creating a ",(0,t.jsx)(n.code,{children:"LayoutContainer"})," or ",(0,t.jsx)(n.code,{children:"LayoutView"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"const container = new LayoutContainer({\n    layout: {\n        overflow: 'scroll',\n    },\n    trackpad: {\n        // Maximum scrolling speed (pixels per frame)\n        maxSpeed: 400,\n\n        // Constrain scrolling within bounds\n        constrain: true,\n\n        // No x-axis scrolling allowed when dragging beyond bounds\n        xConstrainPercent: -1,\n        // No y-axis overflow allowed when dragging beyond bounds\n        yConstrainPercent: 0,\n\n        // Disable momentum/easing when releasing\n        disableEasing: false,\n\n        // Custom easing for x/y axes\n        xEase: new ScrollSpring({\n            max: 200, // Maximum velocity\n            damp: 0.7, // Higher damping = less bounce\n            springiness: 0.15, // Higher springiness = faster movement\n        }),\n        yEase: new ScrollSpring({\n            // Custom y-axis spring settings\n        }),\n    },\n});\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}}}]);